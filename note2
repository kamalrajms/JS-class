1/3/2025

introduction to Js
Variables and Datatype
Operator and Expression
conditional statements
loop in Js
function
array
object
DOM manipulation

/// introduction to Java script

        used to make web page interactive
        adding dynamic behaviour such as animation , form validation and event handlers.

        inline ,internal,External-Js

        we can see output though= console.log()

        js used for web pages,gameing,mobileapp,server-side(node.js)

        singleline comment=  \\
        multi line comment=  /* */
         js is case-sensitive

/// Variables and Datatype

=>variables //const ver let

        //const -we can assign once and store the valus once  useing same variable.
        //ver -we can assign and change the value manytimes useing same variable.
        //let - we can assign only once  and  change valus manytimes useing same variable.

=>Data type

    Datatype-primitive data type, referance Datatype

        primitive data type = number,boolean,null,undefined,string.

        referance data type = object ,array ,function.

3/3/2025

        primitive data type-

        String → Text enclosed in quotes
        Number → Any numeric value (integer or decimal)
        Boolean → true or false
        Undefined → A variable declared but not assigned a value
        Null → Represents an intentional empty value


        type convertion
        str to num
        num to srt
        Converting to a Boolean

        false values =0, "", null, undefined, Nan
        truth value= everything evpect

///operators and expression

        arithematic, assignment,comparison, logical, bitwise,ternary operators

        arithematic=[ +   -      *       /       %       **]

        assignment =[ = , += ,-= , *= ,/= ,%= ,**=]

        comparison =[ ==,===, != ,!== ,< ,>,<=,>=]

        logical =[ &&, ||, !]

        bitwise=[&,|,^]

        to find binary num== 64 32 16 8 4 2 1

        01100=12
        10101=21
        12-21
        00100=4

        ternary operator=  A shorthand for if-else statements.  (a ? "true" : "false");

        {},[],(),*,/,+,-


4/3/2025

        prompt - for user input

        per(++a)-increment=it will increment the value and assigned
        post(a++)increment=it will assigne the value first and increment it .


        comditional-statements

                //if statement
                        if(condition){
                                //true
                        }
                        else if(condition){
                                //true
                        }
                        else{

                        }
                //switch
                        switch(expression){
                                case 1:
                                break
                                case2:
                                break
                                default:
                        }


        loop
                for
                while
                do-while
                for in
                for of

                //for

                for(initializing,condition, increment/decrement){
                        
                }

                //while
                while(condition){

                }

                //do-while
                do{

                }while(condition)


5/3/2025

        Used to iterate over the properties (keys) of an object.
        Works on objects but can also be used on arrays (though not recommended).
                //for in loop
                for (let key in object){

                }


        for...of Loop (For Arrays & Iterables)
        Used to iterate over the values of an array or iterable objects (like strings, Maps, Sets, etc.).
        Works on arrays, strings, Maps, Sets, etc.
                for (let value of iterable) {
                // Code to execute
                }



        Uses of Backticks (`) in JavaScript
                Template Literals (Template Strings)
                Expression Interpolation (${})




6/3/2025

///function


        what is function
                A function in JavaScript is a block of reusable code that performs a specific task.
                Functions help avoid repetition, improve readability, and make code modular.

        function decleration
                Best for: Reusability, structured code.

                function name(){
                        return
                }
        anonmous function
                 Best for: Assigning functions to variables, passing functions as arguments.

                let num =function(){
                        return
                }
        arrow function 
                Shorter syntax for writing functions.
                Best for: Short, simple functions.

                let num =()=>{
                        return
                }

        Function with Default Parameters
                Set default values for parameters to avoid undefined.

        
        Use Function Declaration → When defining standard reusable functions.
        Use Function Expression → When assigning functions to variables or passing them as arguments.
        Use Arrow Functions → When writing short functions, especially for callbacks.



///Arrays=[]


        An array in JavaScript is a special variable that can store multiple values in a single variable.

        values by index number.

         Array Properties
                // .length	        Returns the number of elements in an array	arr.length
                // .indexOf()	Finds the index of a value	                arr.indexOf("Banana")
                // .includes()	Checks if an array contains a value	        arr.includes(5)
        

        Common Array Methods

                // .push()	        Adds an element to the end	                arr.push(6)
                // .pop()	        Removes and returns the last element	        arr.pop()
                // .shift()	Removes and returns the first element	        arr.shift()
                // .unshift()	Adds elements to the beginning	                arr.unshift(0)
                // .slice()	Returns a portion of the array	                arr.slice(1, 3)
                // .splice()	Adds/removes elements at a specific index	arr.splice(2, 1, "New")
                // .reverse()	Reverses the array	                        arr.reverse()
                // .sort()	        Sorts elements (by default, as strings)        	arr.sort()


        for loop in array

        map in arrays